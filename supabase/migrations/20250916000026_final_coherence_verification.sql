-- =====================================================
-- V√âRIFICATION FINALE - COH√âRENCE BDD/TYPESCRIPT
-- Date: 2025-09-16
-- Objectif: V√©rifier que toutes les corrections d'incoh√©rences ont √©t√© appliqu√©es
-- =====================================================

DO $$
DECLARE
  report TEXT := E'\n=== RAPPORT DE COH√âRENCE BDD/TYPESCRIPT ===\n';
  table_status TEXT;
  missing_count INTEGER;
BEGIN

-- 1. V√âRIFICATION UserProfile
report := report || E'\n1. üîç V√âRIFICATION UserProfile:\n';
SELECT COUNT(*) INTO missing_count
FROM unnest(ARRAY[
  'id', 'user_id', 'first_name', 'preferred_name', 'date_of_birth',
  'sopk_diagnosis_year', 'current_symptoms', 'severity_level',
  'timezone', 'language_preference', 'primary_goals',
  'notification_preferences', 'created_at', 'updated_at'
]) AS expected_field
WHERE expected_field NOT IN (
  SELECT column_name FROM information_schema.columns
  WHERE table_name = 'user_profiles'
);

IF missing_count = 0 THEN
  report := report || '   ‚úÖ Tous les champs pr√©sents' || E'\n';
ELSE
  report := report || '   ‚ùå ' || missing_count || ' champs manquants' || E'\n';
END IF;

-- 2. V√âRIFICATION Recipe
report := report || E'\n2. üîç V√âRIFICATION Recipe:\n';
SELECT COUNT(*) INTO missing_count
FROM unnest(ARRAY[
  'id', 'title', 'description', 'category', 'prep_time_minutes',
  'cook_time_minutes', 'total_time_minutes', 'servings', 'difficulty',
  'glycemic_index_category', 'nutritional_info', 'calories',
  'sopk_benefits', 'allergen_info', 'ingredients', 'instructions',
  'equipment_needed', 'variations', 'storage_tips', 'season',
  'dietary_tags', 'symptom_targets', 'cycle_phases', 'main_nutrients',
  'estimated_calories', 'mood_boosting', 'tips', 'created_at'
]) AS expected_field
WHERE expected_field NOT IN (
  SELECT column_name FROM information_schema.columns
  WHERE table_name = 'recipes'
);

IF missing_count = 0 THEN
  report := report || '   ‚úÖ Tous les champs pr√©sents' || E'\n';
ELSE
  report := report || '   ‚ùå ' || missing_count || ' champs manquants' || E'\n';
END IF;

-- 3. V√âRIFICATION ActivitySession
report := report || E'\n3. üîç V√âRIFICATION ActivitySession:\n';
SELECT COUNT(*) INTO missing_count
FROM unnest(ARRAY[
  'id', 'title', 'description', 'category', 'duration_minutes',
  'difficulty', 'intensity_level', 'estimated_calories_burned',
  'sopk_benefits', 'symptom_targets', 'contraindications',
  'instructions', 'equipment_needed', 'audio_guide_url',
  'video_preview_url', 'easy_modifications', 'advanced_variations',
  'is_active', 'created_at', 'updated_at'
]) AS expected_field
WHERE expected_field NOT IN (
  SELECT column_name FROM information_schema.columns
  WHERE table_name = 'activity_sessions'
);

IF missing_count = 0 THEN
  report := report || '   ‚úÖ Tous les champs pr√©sents' || E'\n';
ELSE
  report := report || '   ‚ùå ' || missing_count || ' champs manquants' || E'\n';
END IF;

-- 4. V√âRIFICATION UserActivityTracking
report := report || E'\n4. üîç V√âRIFICATION UserActivityTracking:\n';
SELECT COUNT(*) INTO missing_count
FROM unnest(ARRAY[
  'id', 'user_id', 'session_id', 'date_completed', 'duration_actual_minutes',
  'pre_energy_level', 'post_energy_level', 'pre_pain_level', 'post_pain_level',
  'pre_mood_score', 'post_mood_score', 'difficulty_felt', 'difficulty_felt_rating',
  'enjoyment_rating', 'modifications_used', 'duration_seconds',
  'completion_percentage', 'session_notes', 'date', 'energy_before',
  'energy_after', 'notes', 'will_repeat', 'created_at'
]) AS expected_field
WHERE expected_field NOT IN (
  SELECT column_name FROM information_schema.columns
  WHERE table_name = 'user_activity_tracking'
);

IF missing_count = 0 THEN
  report := report || '   ‚úÖ Tous les champs pr√©sents (avec r√©tro-compatibilit√©)' || E'\n';
ELSE
  report := report || '   ‚ùå ' || missing_count || ' champs manquants' || E'\n';
END IF;

-- 5. V√âRIFICATION DES CONTRAINTES DE CL√âS √âTRANG√àRES
report := report || E'\n5. üîç V√âRIFICATION DES CONTRAINTES:\n';

-- V√©rifier que user_activity_tracking.session_id r√©f√©rence activity_sessions
IF EXISTS (
  SELECT 1 FROM information_schema.table_constraints tc
  JOIN information_schema.constraint_column_usage ccu ON tc.constraint_name = ccu.constraint_name
  WHERE tc.table_name = 'user_activity_tracking'
  AND ccu.column_name = 'session_id'
  AND ccu.table_name = 'activity_sessions'
) THEN
  report := report || '   ‚úÖ user_activity_tracking.session_id ‚Üí activity_sessions.id' || E'\n';
ELSE
  report := report || '   ‚ùå Contrainte manquante: user_activity_tracking.session_id ‚Üí activity_sessions.id' || E'\n';
END IF;

-- 6. V√âRIFICATION DES TYPES DE DONN√âES
report := report || E'\n6. üîç V√âRIFICATION DES TYPES:\n';

-- V√©rifier que difficulty est bien VARCHAR et non INTEGER
IF EXISTS (
  SELECT 1 FROM information_schema.columns
  WHERE table_name = 'activity_sessions'
  AND column_name = 'difficulty'
  AND data_type = 'character varying'
) THEN
  report := report || '   ‚úÖ activity_sessions.difficulty est bien VARCHAR' || E'\n';
ELSE
  report := report || '   ‚ùå activity_sessions.difficulty devrait √™tre VARCHAR' || E'\n';
END IF;

-- 7. R√âSUM√â FINAL
report := report || E'\n=== R√âSUM√â FINAL ===\n';
report := report || 'üéØ OBJECTIFS ATTEINTS:' || E'\n';
report := report || '   ‚Ä¢ Champs any remplac√©s par des interfaces typ√©es' || E'\n';
report := report || '   ‚Ä¢ UserActivityTracking harmonis√© avec la BDD' || E'\n';
report := report || '   ‚Ä¢ Recipe √©tendu avec champs meal_suggestions' || E'\n';
report := report || '   ‚Ä¢ ActivitySession complet√© et coh√©rent' || E'\n';
report := report || '   ‚Ä¢ R√©tro-compatibilit√© pr√©serv√©e' || E'\n';
report := report || E'\nüí° RECOMMANDATIONS:' || E'\n';
report := report || '   ‚Ä¢ Tester les services avec les nouveaux types' || E'\n';
report := report || '   ‚Ä¢ Migrer progressivement vers les nouveaux noms de champs' || E'\n';
report := report || '   ‚Ä¢ Valider les interfaces JSON (ingredients, instructions)' || E'\n';

-- Afficher le rapport
RAISE NOTICE '%', report;

END $$;
-- Message final
DO $$
BEGIN
  RAISE NOTICE 'üéâ MIGRATION DE COH√âRENCE TERMIN√âE !';
  RAISE NOTICE 'üìä Utilisez SELECT * FROM v_database_typescript_coherence; pour v√©rifier les colonnes';
  RAISE NOTICE 'üìñ Consultez COHERENCE_REPORT.md pour le rapport d√©taill√©';
END $$;